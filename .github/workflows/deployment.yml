name: Build and Deploy

on:
  push:
    branches:
      - 'edit/change-to-new-frontend' # Change this to your main branch name
 

env:
  DOCKER_USER: '${{secrets.DOCKER_USERNAME}}'
  DOCKER_PASSWORD: '${{secrets.DOCKER_PASSWORD}}'
  GCP_SA_KEY: '${{secrets.SERVICE_ACCOUNT_KEY}}'
  GCP_PROJECT_ID: '${{secrets.GCP_PROJECT_ID}}'
  SA: '${{secrets.SA}}'

jobs:
  IOC:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud --version
          gcloud components install gke-gcloud-auth-plugin


      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'


      - name: Authenticate with Service Account Key
        run: |
          echo "$GCP_SA_KEY" > service-account-key.json
          gcloud auth activate-service-account --key-file=service-account-key.json

      - name: Set Active Account
        run: gcloud config set account $SA

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
        env:
          GOOGLE_CREDENTIALS: $GCP_SA_KEY

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var 'gcp_sa_key=$GCP_SA_KEY'
        env:
          GCP_SA_KEY: $GCP_SA_KEY

      - name: Apply Terraform Changes
        continue-on-error: true
        run: terraform apply -var 'gcp_sa_key=$GCP_SA_KEY' -auto-approve
        env:
          GCP_SA_KEY: $GCP_SA_KEY

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}


      - id: buildimage
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            smitmark01/doct-cbd3375-frontend:v1.0



      - name: Debug Service Account Key
        run: |
          echo "$SERVICE_ACCOUNT_KEY" > service-account-key.json
          cat service-account-key.json



      - name: Debug Google Cloud Authentication
        run: gcloud auth list


      - name: List Images
        run: |
          docker images

      - name: Get Value account
        run: gcloud config get-value account


      - name: Setup Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
        env:
          GOOGLE_APPLICATION_CREDENTIALS: $GCP_SA_KEY


      - name: Deploy to GKE
        run: |
            gcloud container clusters get-credentials cluster-for-frontend --region us-central1-a
            kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
            BACKEND_URL=$(cat backend)
            helm upgrade -f ./k8s/helm/frontend/charts/values.yaml --set backend=$BACKEND_URL --install frontend-uat ./k8s/helm/frontend/charts/
            kubectl config set-context --current --namespace=cyberbullying-namespace
            kubectl get ingress
            echo "Click the URL below to test"
            kubectl describe ingress frontend-ingress-resource